<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ========================= DEFINICION HIBERNATE ========================= -->

	<!-- importamos las definicion del dataSource -->
	<import resource="applicationContext-dataSource.xml" />

	<!-- Configuracion que reemplaza los placeholders ${...} placeholders con 
		los valores del archivo properties -->
	<!-- (En este caso, los datos relacionados a la conexion JDBC para el DataSource) -->
	<context:property-placeholder location="classpath:jdbc.properties" />

    <!-- Hibernate SessionFactory, para anotaciones en las clases entity usamos AnnotationSessionFactoryBean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.bolsadeideas.ejemplos.entity.Estudiante</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
			</props>
		</property>
	</bean>

    <!-- HibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Transaction manager para un solo SessionFactory (es una alternativa 
		a JTA) -->
	<bean id="transactionManager"
              class="org.springframework.orm.hibernate4.HibernateTransactionManager"
              p:sessionFactory-ref="sessionFactory" />

	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!-- ============ DEFINICION OBJETOS DE NEGOCIO O ACCESO A DATOS ============ -->

	<!-- Scans el classpath de la aplicación, buscar y detecta los estereotipos 
		@Components, @Repository, @Service, y @Controller y registra los beans en 
		el contenedor de Spring -->
	<context:component-scan base-package="com.bolsadeideas.ejemplos.dao" />

	<!-- Activa las anotaciones para ser detectadas en las clases bean de Spring: 
		@Required y @Autowired, @Resource. -->
	<context:annotation-config />

	<!-- Instrucción de Spring para activar y manejar el transaction management de forma automática 
		sobre las clases anotadas con @Repository. -->
	<tx:annotation-driven />

</beans>